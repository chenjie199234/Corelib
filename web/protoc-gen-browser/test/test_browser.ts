// Code generated by protoc-gen-browser. DO NOT EDIT.
// version:
// 	protoc-gen-browser v0.0.76
// 	protoc             v3.21.11
// source: test.proto

import Axios from "axios";
import Long from "long";
import Base64 from "@protobufjs/base64"

export interface Error{
	code: number;
	msg: string;
}

export enum TE{
	A=0,
	B=3
}
export interface Data{
	t: Data|null|undefined;
	e: TE;
}
function DataToJson(msg: Data): string{
	let s: string="{"
	//t
	if(msg.t==null||msg.t==undefined){
		s+='"t":null,'
	}else{
		s+='"t":'+DataToJson(msg.t)+','
	}
	//e
	if(msg.e==null||msg.e==undefined||(msg.e!=0&&msg.e!=3)){
		throw 'Data.e must be enum in TE'
	}else{
		s+='"e":'+msg.e+','
	}
	if(s.length==1){
		s+="}"
	}else{
		s=s.substr(0,s.length-1)+'}'
	}
	return s
}
function JsonToData(jsonobj: Object): Data{
	let obj: Object={}
	//t
	if(jsonobj['t']=null||jsonobj['t']==undefined){
		obj['t']=null
	}else if(typeof jsonobj['t']!='object'){
		throw 'Data.t must be Data'
	}else{
		obj['t']=JsonToData(jsonobj['t'])
	}
	//e
	if(jsonobj['e']==null||jsonobj['e']==undefined){
		obj['e']=0
	}else if(typeof jsonobj['e']!='number'||(jsonobj['e']!=0&&jsonobj['e']!=3)){
		throw 'Data.e must be enum in TE'
	}else{
		obj['e']=jsonobj['e']
	}
	return obj
}
export interface HelloReq{
	//Warning!!!Type is int32,be careful of sign(+,-) and overflow
	i32: number;
	//Warning!!!Element type is int32,be careful of sign(+,-) and overflow
	ri32: Array<number>|null|undefined;
	//Warning!!!Type is uint32,be careful of sign(+) and overflow
	u32: number;
	//Warning!!!Element type is uint32,be careful of sign(+) and overflow
	ru32: Array<number>|null|undefined;
	//Warning!!!Type is int64,be careful of sign(+,-)
	i64: Long;
	//Warning!!!Element type is int64,be careful of sign(+,-)
	ri64: Array<Long>|null|undefined;
	//Warning!!!Type is uint64,be careful of sign(+)
	u64: Long;
	//Warning!!!Element type is uint64,be careful of sign(+)
	ru64: Array<Long>|null|undefined;
	b: boolean;
	rb: Array<boolean>|null|undefined;
	e: TE;
	es: Array<TE>|null|undefined;
	s: string;
	rs: Array<string>|null|undefined;
	bs: Uint8Array;
	rbs: Array<Uint8Array>|null|undefined;
	//Warning!!!Type is float32,be careful of overflow
	f: number;
	//Warning!!!Element type is float32,be careful of overflow
	rf: Array<number>|null|undefined;
	d: number;
	rd: Array<number>|null|undefined;
	msg: Data|null|undefined;
	rmsg: Array<Data|null|undefined>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	//Warning!!!map's value's type is int32,be careful of sign(+,-) and overflow
	mi32: Map<Long,number>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	//Warning!!!map's value's type is uint32,be careful of sign(+) and overflow
	mu32: Map<Long,number>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	//Warning!!!map's value's type is int64,be careful of sign(+,-)
	mi64: Map<Long,Long>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	//Warning!!!map's value's type is uint64,be careful of sign(+)
	mu64: Map<Long,Long>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	mb: Map<Long,boolean>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	me: Map<Long,TE>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	ms: Map<Long,string>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	mbs: Map<Long,Uint8Array>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	//Warning!!!map's value's type is float32,be careful of overflow
	mf: Map<Long,number>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	md: Map<Long,number>|null|undefined;
	//Warning!!!map's key's type is uint64,be carefule of sign(+)
	mmsg: Map<Long,Data|null|undefined>|null|undefined;
	union:
		//Warning!!!Value's type is int32,be careful of sign(+,-) and overflow
		{$key: "oi32",value: number}|
		//Warning!!!Value's type is int32,be careful of sign(+) and overflow
		{$key: "ou32",value: number}|
		//Warning!!!Value's type is int32,be careful of sign(+,-) and overflow
		{$key: "oi64",value: Long}|
		//Warning!!!Value's type is int32,be careful of sign(+) and overflow
		{$key: "ou64",value: Long}|
		//Warning!!!Value's type is float32,be careful of overflow
		{$key: "of",value: number}|
		{$key: "od",value: number}|
		{$key: "os",value: string}|
		{$key: "obs",value: Uint8Array}|
		{$key: "oe",value: TE}|
		{$key: "ob",value: boolean}|
		{$key: "omsg",value: Data|null|undefined}|
		null|undefined;
}
function HelloReqToJson(msg: HelloReq): string{
	let s: string="{"
	//i32
	if(msg.i32==null||msg.i32==undefined||!Number.isInteger(msg.i32)){
		throw 'HelloReq.i32 must be integer'
	}else if(msg.i32>2147483647||msg.i32<-2147483648){
		throw 'HelloReq.i32 overflow'
	}else{
		s+='"i32":'+msg.i32+','
	}
	//ri32
	if(msg.ri32==null||msg.ri32==undefined){
		s+='"ri32":null,'
	}else if(msg.ri32.length==0){
		s+='"ri32":[],'
	}else{
		s+='"ri32":['
		for(let element of msg.ri32){
			if(element==null||element==undefined||!Number.isInteger(element)){
				throw 'element in HelloReq.ri32 must be integer'
			}
			if(element>2147483647||element<-2147483648){
				throw 'element in HelloReq.ri32 overflow'
			}
			s+=element+','
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//u32
	if(msg.u32==null||msg.u32==undefined||!Number.isInteger(msg.u32)){
		throw 'HelloReq.u32 must be integer'
	}else if(msg.u32>4294967295||msg.u32<0){
		throw 'HelloReq.u32 overflow'
	}else{
		s+='"u32":'+msg.u32+','
	}
	//ru32
	if(msg.ru32==null||msg.ru32==undefined){
		s+='"ru32":null,'
	}else if(msg.ru32.length==0){
		s+='"ru32":[],'
	}else{
		s+='"ru32":['
		for(let element of msg.ru32){
			if(element==null||element==undefined||!Number.isInteger(element)){
				throw 'element in HelloReq.ru32 must be integer'
			}
			if(element>4294967295||element<0){
				throw 'element in HelloReq.ru32 overflow'
			}
			s+=element+','
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//i64
	if(msg.i64==null||msg.i64==undefined){
		throw 'HelloReq.i64 must be integer'
	}else if(msg.i64.lessThan(Long.MIN_VALUE)||msg.i64.greaterThan(Long.MAX_VALUE)){
		throw 'HelloReq.i64 overflow'
	}else{
		s+='"i64":"'+msg.i64.toString()+'",'
	}
	//ri64
	if(msg.ri64==null||msg.ri64==undefined){
		s+='"ri64":null,'
	}else if(msg.ri64.length==0){
		s+='"ri64":[],'
	}else{
		s+='"ri64":['
		for(let element of msg.ri64){
			if(element==null||element==undefined){
				throw 'element in HelloReq.ri64 must be integer'
			}else if(element.lessThan(Long.MIN_VALUE)||element.greaterThan(Long.MAX_VALUE)){
				throw 'element in HelloReq.ri64 overflow'
			}else{
				s+='"'+element.toString()+'",'
			}
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//u64
	if(msg.u64==null||msg.u64==undefined){
		throw 'HelloReq.u64 must be integer'
	}else if(msg.u64.lessThan(0)){
		throw 'HelloReq.u64 overflow'
	}else{
		s+='"u64":"'+msg.u64.toString()+'",'
	}
	//ru64
	if(msg.ru64==null||msg.ru64==undefined){
		s+='"ru64":null,'
	}else if(msg.ru64.length==0){
		s+='"ru64":[],'
	}else{
		s+='"ru64":['
		for(let element of msg.ru64){
			if(element==null||element==undefined||(typeof element=='number'&&!Number.isInteger(element))){
				throw 'element in HelloReq.ru64 must be integer'
			}else if(element.lessThan(0)){
				throw 'element in HelloReq.ru64 overflow'
			}else{
				s+='"'+element.toString()+'",'
			}
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//b
	if(msg.b==null||msg.b==undefined){
		throw 'HelloReq.b must be boolean'
	}else{
		s+='"b":'+msg.b+','
	}
	//rb
	if(msg.rb==null||msg.rb==undefined){
		s+='"rb":null,'
	}else if(msg.rb.length==0){
		s+='"rb":[],'
	}else{
		s+='"rb":['
		for(let element of msg.rb){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rb must be boolean'
			}
			s+=element+','
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//e
	if(msg.e==null||msg.e==undefined||(msg.e!=0&&msg.e!=3)){
		throw 'HelloReq.e must be enum in TE'
	}else{
		s+='"e":'+msg.e+','
	}
	//es
	if(msg.es==null||msg.es==undefined){
		s+='"es":null,'
	}else if(msg.es.length==0){
		s+='"es":[],'
	}else{
		s+='"es":['
		for(let element of msg.es){
			if(element==null||element==undefined||(element!=0&&element!=3)){
				throw 'element in HelloReq.es must be enum in TE'
			}
			s+=element+','
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//s
	if(msg.s==null||msg.s==undefined){
		throw 'HelloReq.s must be string'
	}else{
		s+='"s":"'+msg.s+'",'
	}
	//rs
	if(msg.rs==null||msg.rs==undefined){
		s+='"rs":null,'
	}else if(msg.rs.length==0){
		s+='"rs":[],'
	}else{
		s+='"rs":['
		for(let element of msg.rs){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rs must be string'
			}
			s+='"'+element+'",'
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//bs
	if(msg.bs==null||msg.bs==undefined){
		throw 'HelloReq.bs must be Uint8Array'
	}else{
		s+='"bs":"'+Base64.encode(msg.bs,0,msg.bs.length)+'",'
	}
	//rbs
	if(msg.rbs==null||msg.rbs==undefined){
		s+='"rbs":null,'
	}else if(msg.rbs.length==0){
		s+='"rbs":[],'
	}else{
		s+='"rbs":['
		for(let element of msg.rbs){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rbs must be Uint8Array'
			}
			s+='"'+Base64.encode(element,0,element.length)+'",'
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//f
	if(msg.f==null||msg.f==undefined){
		throw 'HelloReq.f must be number'
	}else{
		s+='"f":'+msg.f+','
	}
	//rf
	if(msg.rf==null||msg.rf==undefined){
		s+='"rf":null,'
	}else if(msg.rf.length==0){
		s+='"rf":[],'
	}else{
		s+='"rf":['
		for(let element of msg.rf){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rf must be number'
			}
			s+=element+','
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//d
	if(msg.d==null||msg.d==undefined){
		throw 'HelloReq.d must be number'
	}else{
		s+='"d":'+msg.d+','
	}
	//rd
	if(msg.rd==null||msg.rd==undefined){
		s+='"rd":null,'
	}else if(msg.rd.length==0){
		s+='"rd":[],'
	}else{
		s+='"rd":['
		for(let element of msg.rd){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rd must be number'
			}
			s+=element+','
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//msg
	if(msg.msg==null||msg.msg==undefined){
		s+='"msg":null,'
	}else{
		s+='"msg":'+DataToJson(msg.msg)+','
	}
	//rmsg
	if(msg.rmsg==null||msg.rmsg==undefined){
		s+='"rmsg":null,'
	}else if(msg.rmsg.length==0){
		s+='"rmsg":[],'
	}else{
		s+='"rmsg":['
		for(let element of msg.rmsg){
			if(element==null||element==undefined){
				s+='null,'
			}else{
				s+=DataToJson(element)+','
			}
		}
		s=s.substr(0,s.length-1)+'],'
	}
	//mi32
	if(msg.mi32==null||msg.mi32==undefined){
		s+='"mi32":null,'
	}else if (msg.mi32.size==0){
		s+='"mi32":{},'
	}else{
		s+='"mi32":{'
		for(let kv of msg.mi32.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mi32 must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mi32 overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined||!Number.isInteger(kv[1])){
				throw "map's value in HelloReq.mi32 must be integer"
			}else if(kv[1]>2147483647||kv[1]<-2147483648){
				throw "map's value in HelloReq.mi32 overflow"
			}
			s+=kv[1]+','
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//mu32
	if(msg.mu32==null||msg.mu32==undefined){
		s+='"mu32":null,'
	}else if (msg.mu32.size==0){
		s+='"mu32":{},'
	}else{
		s+='"mu32":{'
		for(let kv of msg.mu32.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mu32 must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mu32 overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined||!Number.isInteger(kv[1])){
				throw "map's value in HelloReq.mu32 must be integer"
			}else if(kv[1]>4294967295||kv[1]<0){
				throw "map's value in HelloReq.mu32 overflow"
			}
			s+=kv[1]+','
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//mi64
	if(msg.mi64==null||msg.mi64==undefined){
		s+='"mi64":null,'
	}else if (msg.mi64.size==0){
		s+='"mi64":{},'
	}else{
		s+='"mi64":{'
		for(let kv of msg.mi64.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mi64 must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mi64 overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mi64 must be integer"
			}else if(kv[1].lessThan(Long.MIN_VALUE)||kv[1].greaterThan(Long.MAX_VALUE)){
				throw "map's value in HelloReq.mi64 overflow"
			}
			s+='"'+kv[1].toString()+'",'
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//mu64
	if(msg.mu64==null||msg.mu64==undefined){
		s+='"mu64":null,'
	}else if (msg.mu64.size==0){
		s+='"mu64":{},'
	}else{
		s+='"mu64":{'
		for(let kv of msg.mu64.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mu64 must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mu64 overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mu64 must be integer"
			}else if(kv[1].lessThan(0)){
				throw "map's value in HelloReq.mu64 overflow"
			}
			s+='"'+kv[1].toString()+'",'
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//mb
	if(msg.mb==null||msg.mb==undefined){
		s+='"mb":null,'
	}else if (msg.mb.size==0){
		s+='"mb":{},'
	}else{
		s+='"mb":{'
		for(let kv of msg.mb.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mb must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mb overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mb must be boolean"
			}
			s+=kv[1]+','
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//me
	if(msg.me==null||msg.me==undefined){
		s+='"me":null,'
	}else if (msg.me.size==0){
		s+='"me":{},'
	}else{
		s+='"me":{'
		for(let kv of msg.me.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.me must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.me overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined||(kv[1]!=0&&kv[1]!=3)){
				throw "map's value in HelloReq.me must be enum in TE"
			}
			s+=kv[1]+','
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//ms
	if(msg.ms==null||msg.ms==undefined){
		s+='"ms":null,'
	}else if (msg.ms.size==0){
		s+='"ms":{},'
	}else{
		s+='"ms":{'
		for(let kv of msg.ms.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.ms must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.ms overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.ms must be string"
			}
			s+='"'+kv[1]+'",'
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//mbs
	if(msg.mbs==null||msg.mbs==undefined){
		s+='"mbs":null,'
	}else if (msg.mbs.size==0){
		s+='"mbs":{},'
	}else{
		s+='"mbs":{'
		for(let kv of msg.mbs.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mbs must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mbs overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mbs must be string"
			}
			s+='"'+Base64.encode(kv[1],0,kv[1].length)+'",'
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//mf
	if(msg.mf==null||msg.mf==undefined){
		s+='"mf":null,'
	}else if (msg.mf.size==0){
		s+='"mf":{},'
	}else{
		s+='"mf":{'
		for(let kv of msg.mf.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mf must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mf overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mf must be number"
			}
			s+=kv[1]+','
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//md
	if(msg.md==null||msg.md==undefined){
		s+='"md":null,'
	}else if (msg.md.size==0){
		s+='"md":{},'
	}else{
		s+='"md":{'
		for(let kv of msg.md.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.md must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.md overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.md must be number"
			}
			s+=kv[1]+','
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//mmsg
	if(msg.mmsg==null||msg.mmsg==undefined){
		s+='"mmsg":null,'
	}else if (msg.mmsg.size==0){
		s+='"mmsg":{},'
	}else{
		s+='"mmsg":{'
		for(let kv of msg.mmsg.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mmsg must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mmsg overflow"
			}
			s+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				s+='null,'
			}else{
				s+=DataToJson(kv[1])+','
			}
		}
		s=s.substr(0,s.length-1)+'},'
	}
	//union
	if(msg.union!=null&&msg.union!=undefined){
		if(msg.union.$key=='oi32'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined||!Number.isInteger(msg.union.value)){
				throw 'when HelloReq.union.$key is oi32,HelloReq.union.value must be integer'
			}else if(msg.union.value>2147483647||msg.union.value<-2147483648){
				throw 'HelloReq.union.value overflow'
			}
			s+=msg.union.value+','
		}else if(msg.union.$key=='ou32'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined||!Number.isInteger(msg.union.value)){
				throw 'when HelloReq.union.$key is ou32,HelloReq.union.value must be integer'
			}else if(msg.union.value>4294967295||msg.union.value<0){
				throw 'HelloReq.union.value overflow'
			}
			s+=msg.union.value+','
		}else if(msg.union.$key=='oi64'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is oi64,HelloReq.union.value must be integer'
			}else if(msg.union.value.lessThan(Long.MIN_VALUE)||msg.union.value.greaterThan(Long.MAX_VALUE)){
				throw 'HelloReq.union.value overflow'
			}
			s+='"'+msg.union.value.toString()+'",'
		}else if(msg.union.$key=='ou64'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is ou64,HelloReq.union.value must be integer'
			}else if(msg.union.value.lessThan(0)){
				throw 'HelloReq.union.value overflow'
			}
			s+='"'+msg.union.value.toString()+'",'
		}else if(msg.union.$key=='of'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is of,HelloReq.union.value must be number'
			}
			s+=msg.union.value+','
		}else if(msg.union.$key=='od'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is od,HelloReq.union.value must be number'
			}
			s+=msg.union.value+','
		}else if(msg.union.$key=='os'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is os,HelloReq.union.value must be string'
			}
			s+='"'+msg.union.value+'",'
		}else if(msg.union.$key=='obs'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is obs,HelloReq.union.value must be Uint8Array'
			}
			s+='"'+Base64.encode(msg.union.value,0,msg.union.value.length)+'",'
		}else if(msg.union.$key=='oe'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined||(msg.union.value!=0&&msg.union.value!=3)){
				throw 'when HelloReq.union.$key is oe,HelloReq.union.value must be enum in TE'
			}
			s+=msg.union.value+','
		}else if(msg.union.$key=='ob'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is ob,HelloReq.union.value must be boolean'
			}
			s+=msg.union.value+','
		}else if(msg.union.$key=='omsg'){
			s+='"'+msg.union.$key+'":'
			if(msg.union.value==null||msg.union.value==undefined){
				s+='null,'
			}else{
				s+=DataToJson(msg.union.value)+','
			}
		}
	}
	if(s.length==1){
		s+="}"
	}else{
		s=s.substr(0,s.length-1)+'}'
	}
	return s
}
function HelloReqToForm(msg: HelloReq): string{
	let s: string=""
	//i32
	if(msg.i32==null||msg.i32==undefined||!Number.isInteger(msg.i32)){
		throw 'HelloReq.i32 must be integer'
	}else if(msg.i32>2147483647||msg.i32<-2147483648){
		throw 'HelloReq.i32 overflow'
	}else{
		s+='i32='+msg.i32+'&'
	}
	//ri32
	if(msg.ri32!=null&&msg.ri32!=undefined&&msg.ri32.length!=0){
		for(let element of msg.ri32){
			if(element==null||element==undefined||!Number.isInteger(element)){
				throw 'element in HelloReq.ri32 must be integer'
			}
			if(element>2147483647||element<-2147483648){
				throw 'element in HelloReq.ri32 overflow'
			}
			s+='ri32='+element+'&'
		}
	}
	//u32
	if(msg.u32==null||msg.u32==undefined||!Number.isInteger(msg.u32)){
		throw 'HelloReq.u32 must be integer'
	}else if(msg.u32>4294967295||msg.u32<0){
		throw 'HelloReq.u32 overflow'
	}else{
		s+='u32='+msg.u32+'&'
	}
	//ru32
	if(msg.ru32!=null&&msg.ru32!=undefined&&msg.ru32.length!=0){
		for(let element of msg.ru32){
			if(element==null||element==undefined||!Number.isInteger(element)){
				throw 'element in HelloReq.ru32 must be integer'
			}
			if(element>4294967295||element<0){
				throw 'element in HelloReq.ru32 overflow'
			}
			s+='ru32='+element+'&'
		}
	}
	//i64
	if(msg.i64==null||msg.i64==undefined){
		throw 'HelloReq.i64 must be integer'
	}else if(msg.i64.lessThan(Long.MIN_VALUE)||msg.i64.greaterThan(Long.MAX_VALUE)){
		throw 'HelloReq.i64 overflow'
	}else{
		s+='i64='+msg.i64.toString()+'&'
	}
	//ri64
	if(msg.ri64!=null&&msg.ri64!=undefined&&msg.ri64.length!=0){
		for(let element of msg.ri64){
			if(element==null||element==undefined){
				throw 'element in HelloReq.ri64 must be integer'
			}else if(element.lessThan(Long.MIN_VALUE)||element.greaterThan(Long.MAX_VALUE)){
				throw 'element in HelloReq.ri64 overflow'
			}else{
				s+='ri64='+element.toString()+'&'
			}
		}
	}
	//u64
	if(msg.u64==null||msg.u64==undefined){
		throw 'HelloReq.u64 must be integer'
	}else if(msg.u64.lessThan(0)){
		throw 'HelloReq.u64 overflow'
	}else{
		s+='u64='+msg.u64.toString()+'&'
	}
	//ru64
	if(msg.ru64!=null&&msg.ru64!=undefined&&msg.ru64.length!=0){
		for(let element of msg.ru64){
			if(element==null||element==undefined){
				throw 'element in HelloReq.ru64 must be integer'
			}else if(element.lessThan(0)){
				throw 'element in HelloReq.ru64 overflow'
			}else{
				s+='ru64='+element.toString()+'&'
			}
		}
	}
	//b
	if(msg.b==null||msg.b==undefined){
		throw 'HelloReq.b must be boolean'
	}else{
		s+='b='+msg.b+'&'
	}
	//rb
	if(msg.rb!=null&&msg.rb!=undefined&&msg.rb.length!=0){
		for(let element of msg.rb){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rb must be boolean'
			}
			s+='rb='+element+'&'
		}
	}
	//e
	if(msg.e==null||msg.e==undefined||(msg.e!=0&&msg.e!=3)){
		throw 'HelloReq.e must be enum in TE'
	}else{
		s+='e='+msg.e+'&'
	}
	//es
	if(msg.es!=null&&msg.es!=undefined&&msg.es.length!=0){
		for(let element of msg.es){
			if(element==null||element==undefined||(element!=0&&element!=3)){
				throw 'element in HelloReq.es must be enum in TE'
			}
			s+='es='+element+'&'
		}
	}
	//s
	if(msg.s==null||msg.s==undefined){
		throw 'HelloReq.s must be string'
	}else{
		s+='s='+msg.s+'&'
	}
	//rs
	if(msg.rs!=null&&msg.rs!=undefined&&msg.rs.length!=0){
		for(let element of msg.rs){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rs must be string'
			}
			s+='rs='+element+'&'
		}
	}
	//bs
	if(msg.bs==null||msg.bs==undefined){
		throw 'HelloReq.bs must be Uint8Array'
	}else{
		s+='bs='+Base64.encode(msg.bs,0,msg.bs.length)+'&'
	}
	//rbs
	if(msg.rbs!=null&&msg.rbs!=undefined&&msg.rbs.length!=0){
		for(let element of msg.rbs){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rbs must be Uint8Array'
			}
			s+='rbs='+Base64.encode(element,0,element.length)+'&'
		}
	}
	//f
	if(msg.f==null||msg.f==undefined){
		throw 'HelloReq.f must be number'
	}else{
		s+='f='+msg.f+'&'
	}
	//rf
	if(msg.rf!=null&&msg.rf!=undefined&&msg.rf.length!=0){
		for(let element of msg.rf){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rf must be number'
			}
			s+='rf='+element+'&'
		}
	}
	//d
	if(msg.d==null||msg.d==undefined){
		throw 'HelloReq.d must be number'
	}else{
		s+='d='+msg.d+'&'
	}
	//rd
	if(msg.rd!=null&&msg.rd!=undefined&&msg.rd.length!=0){
		for(let element of msg.rd){
			if(element==null||element==undefined){
				throw 'element in HelloReq.rd must be number'
			}
			s+='rd='+element+'&'
		}
	}
	//msg
	if(msg.msg!=null&&msg.msg!=undefined){
		s+='msg='+DataToJson(msg.msg)+'&'
	}
	//rmsg
	if(msg.rmsg!=null&&msg.rmsg!=undefined&&msg.rmsg.length!=0){
		for(let element of msg.rmsg){
			if(element==null||element==undefined){
				s+='rmsg=null&'
			}else{
				s+='rmsg='+DataToJson(element)+'&'
			}
		}
	}
	//mi32
	if(msg.mi32!=null&&msg.mi32!=undefined&&msg.mi32.size!=0){
		let tmps: string="{"
		for(let kv of msg.mi32.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mi32 must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mi32 overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined||!Number.isInteger(kv[1])){
				throw "map's value in HelloReq.mi32 must be integer"
			}else if(kv[1]>2147483647||kv[1]<-2147483648){
				throw "map's value in HelloReq.mi32 overflow"
			}
			tmps+=kv[1]+','
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='mi32='+tmps+'&'
	}
	//mu32
	if(msg.mu32!=null&&msg.mu32!=undefined&&msg.mu32.size!=0){
		let tmps: string="{"
		for(let kv of msg.mu32.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mu32 must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mu32 overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined||!Number.isInteger(kv[1])){
				throw "map's value in HelloReq.mu32 must be integer"
			}else if(kv[1]>4294967295||kv[1]<0){
				throw "map's value in HelloReq.mu32 overflow"
			}
			tmps+=kv[1]+','
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='mu32='+tmps+'&'
	}
	//mi64
	if(msg.mi64!=null&&msg.mi64!=undefined&&msg.mi64.size!=0){
		let tmps: string="{"
		for(let kv of msg.mi64.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mi64 must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mi64 overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mi64 must be integer"
			}else if(kv[1].lessThan(Long.MIN_VALUE)||kv[1].greaterThan(Long.MAX_VALUE)){
				throw "map's value in HelloReq.mi64 overflow"
			}
			tmps+='"'+kv[1].toString()+'",'
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='mi64='+tmps+'&'
	}
	//mu64
	if(msg.mu64!=null&&msg.mu64!=undefined&&msg.mu64.size!=0){
		let tmps: string="{"
		for(let kv of msg.mu64.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mu64 must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mu64 overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mu64 must be integer"
			}else if(kv[1].lessThan(0)){
				throw "map's value in HelloReq.mu64 overflow"
			}
			tmps+='"'+kv[1].toString()+'",'
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='mu64='+tmps+'&'
	}
	//mb
	if(msg.mb!=null&&msg.mb!=undefined&&msg.mb.size!=0){
		let tmps: string="{"
		for(let kv of msg.mb.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mb must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mb overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mb must be boolean"
			}
			tmps+=kv[1]+','
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='mb='+tmps+'&'
	}
	//me
	if(msg.me!=null&&msg.me!=undefined&&msg.me.size!=0){
		let tmps: string="{"
		for(let kv of msg.me.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.me must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.me overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined||(kv[1]!=0&&kv[1]!=3)){
				throw "map's value in HelloReq.me must be enum in TE"
			}
			tmps+=kv[1]+','
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='me='+tmps+'&'
	}
	//ms
	if(msg.ms!=null&&msg.ms!=undefined&&msg.ms.size!=0){
		let tmps: string="{"
		for(let kv of msg.ms.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.ms must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.ms overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.ms must be string"
			}
			tmps+='"'+kv[1]+'",'
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='ms='+tmps+'&'
	}
	//mbs
	if(msg.mbs!=null&&msg.mbs!=undefined&&msg.mbs.size!=0){
		let tmps: string="{"
		for(let kv of msg.mbs.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mbs must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mbs overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mbs must be string"
			}
			tmps+='"'+Base64.encode(kv[1],0,kv[1].length)+'",'
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='mbs='+tmps+'&'
	}
	//mf
	if(msg.mf!=null&&msg.mf!=undefined&&msg.mf.size!=0){
		let tmps: string="{"
		for(let kv of msg.mf.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mf must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mf overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.mf must be number"
			}
			tmps+=kv[1]+','
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='mf='+tmps+'&'
	}
	//md
	if(msg.md!=null&&msg.md!=undefined&&msg.md.size!=0){
		let tmps: string="{"
		for(let kv of msg.md.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.md must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.md overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				throw "map's value in HelloReq.md must be number"
			}
			tmps+=kv[1]+','
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='md='+tmps+'&'
	}
	//mmsg
	if(msg.mmsg!=null&&msg.mmsg!=undefined&&msg.mmsg.size!=0){
		let tmps: string="{"
		for(let kv of msg.mmsg.entries()){
			if(kv[0]==null||kv[0]==undefined){
				throw "map's key in HelloReq.mmsg must be integer"
			}else if(kv[0].lessThan(0)){
				throw "map's key in HelloReq.mmsg overflow"
			}
				tmps+='"'+kv[0].toString()+'":'
			if(kv[1]==null||kv[1]==undefined){
				tmps+='null,'
			}else{
				tmps+=DataToJson(kv[1])+','
			}
		}
		if(tmps.length==1){
			tmps+="}"
		}else{
			tmps=tmps.substr(0,tmps.length-1)+'}'
		}
		s+='mmsg='+tmps+'&'
	}
	//union
	if(msg.union!=null&&msg.union!=undefined){
		if(msg.union.$key=='oi32'){
			if(msg.union.value==null||msg.union.value==undefined||!Number.isInteger(msg.union.value)){
				throw 'when HelloReq.union.$key is oi32,HelloReq.union.value must be integer'
			}else if(msg.union.value>2147483647||msg.union.value<-2147483648){
				throw 'HelloReq.union.value overflow'
			}
			s+=msg.union.$key+'='+msg.union.value+'&'
		}else if(msg.union.$key=='ou32'){
			if(msg.union.value==null||msg.union.value==undefined||!Number.isInteger(msg.union.value)){
				throw 'when HelloReq.union.$key is ou32,HelloReq.union.value must be integer'
			}else if(msg.union.value>4294967295||msg.union.value<0){
				throw 'HelloReq.union.value overflow'
			}
			s+=msg.union.$key+'='+msg.union.value+'&'
		}else if(msg.union.$key=='oi64'){
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is oi64,HelloReq.union.value must be integer'
			}else if(msg.union.value.lessThan(Long.MIN_VALUE)||msg.union.value.greaterThan(Long.MAX_VALUE)){
				throw 'HelloReq.union.value overflow'
			}
			s+=msg.union.$key+'='+msg.union.value.toString()+'&'
		}else if(msg.union.$key=='ou64'){
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is ou64,HelloReq.union.value must be integer'
			}else if(msg.union.value.lessThan(0)){
				throw 'HelloReq.union.value overflow'
			}
			s+=msg.union.$key+'='+msg.union.value.toString()+'&'
		}else if(msg.union.$key=='of'){
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is of,HelloReq.union.value must be number'
			}
			s+=msg.union.$key+'='+msg.union.value+'&'
		}else if(msg.union.$key=='od'){
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is od,HelloReq.union.value must be number'
			}
			s+=msg.union.$key+'='+msg.union.value+'&'
		}else if(msg.union.$key=='os'){
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is os,HelloReq.union.value must be string'
			}
			s+=msg.union.$key+'='+msg.union.value+'&'
		}else if(msg.union.$key=='obs'){
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is obs,HelloReq.union.value must be Uint8Array'
			}
			s+=msg.union.$key+'='+Base64.encode(msg.union.value,0,msg.union.value.length)+'&'
		}else if(msg.union.$key=='oe'){
			if(msg.union.value==null||msg.union.value==undefined||(msg.union.value!=0&&msg.union.value!=3)){
				throw 'when HelloReq.union.$key is oe,HelloReq.union.value must be enum in TE'
			}
			s+=msg.union.$key+'='+msg.union.value+'&'
		}else if(msg.union.$key=='ob'){
			if(msg.union.value==null||msg.union.value==undefined){
				throw 'when HelloReq.union.$key is ob,HelloReq.union.value must be boolean'
			}
			s+=msg.union.$key+'='+msg.union.value+'&'
		}else if(msg.union.$key=='omsg'){
			if(msg.union.value==null||msg.union.value==undefined){
				s+=msg.union.$key+'=null&'
			}else{
				s+=msg.union.$key+'='+DataToJson(msg.union.value)+'&'
			}
		}
	}
	if(s.length!=0){
		s=s.substr(0,s.length-1)
	}
	return s
}
function JsonToHelloReq(jsonobj: Object): HelloReq{
	let obj: Object={}
	//i32
	if(jsonobj['i32']==null||jsonobj['i32']==undefined){
		obj['i32']=0
	}else if(typeof jsonobj['i32']!='number'||!Number.isInteger(jsonobj['i32'])){
		throw 'HelloReq.i32 must be integer'
	}else if(jsonob['i32']>2147483647||jsonobj['i32']<-2147483648){
		throw 'HelloReq.i32 overflow'
	}else{
		obj['i32']=jsonobj['i32']
	}
	//ri32
	if(jsonobj['ri32']==null||jsonobj['ri32']==undefined){
		obj['ri32']=null
	}else if(!(jsonobj['ri32'] instanceof Array)){
		throw 'HelloReq.ri32 must be Array<number>|null|undefined'
	}else{
		for(let element of jsonobj['ri32']){
			if(typeof element!='number'||!Number.isInteger(element)){
				throw 'element in HelloReq.ri32 must be integer'
			}else if(element>2147483647||element<-2147483648){
				throw 'element in HelloReq.ri32 overflow'
			}
			if(obj['ri32']==undefined){
				obj['ri32']=new Array<number>
			}
			obj['ri32'].push(element)
		}
	}
	//u32
	if(jsonobj['u32']==null||jsonobj['u32']==undefined){
		obj['u32']=0
	}else if(typeof jsonobj['u32']!='number'||!Number.isInteger(jsonobj['u32'])){
		throw 'HelloReq.u32 must be integer'
	}else if(jsonob['u32']>4294967295||jsonobj['u32']<0){
		throw 'HelloReq.u32 overflow'
	}else{
		obj['u32']=jsonobj['u32']
	}
	//ru32
	if(jsonobj['ru32']==null||jsonobj['ru32']==undefined){
		obj['ru32']=null
	}else if(!(jsonobj['ru32'] instanceof Array)){
		throw 'HelloReq.ru32 must be Array<number>|null|undefined'
	}else{
		for(let element of jsonobj['ru32']){
			if(typeof element!='number'||!Number.isInteger(element)){
				throw 'element in HelloReq.ru32 must be integer'
			}else if(element>4294967295||element<0){
				throw 'element in HelloReq.ru32 overflow'
			}
			if(obj['ru32']==undefined){
				obj['ru32']=new Array<number>
			}
			obj['ru32'].push(element)
		}
	}
	//i64
	if(jsonobj['i64']==null||jsonobj['i64']==undefined){
		obj['i64']=0
	}else if(typeof jsobobj['i64']=='number'){
		if(!Number.isInteger(jsonobj['i64'])){
			throw 'HelloReq.i64 must be integer'
		}
		let tmp: Long=Long.ZERO
		try{
			tmp=Long.fromNumber(jsonobj['i64'],false)
		}catch(e){
			throw 'HelloReq.i64 must be integer'
		}
		obj['i64']=tmp
	}else if(typeof jsonobj['i64']=='string'){
		let tmp:Long=Long.ZERO
		try{
			tmp=Long.fromString(jsonobj['i64'],false)
		}catch(e){
			throw 'HelloReq.i64 must be integer'
		}
		if(tmp.toString()!=jsonobj['i64']){
			throw 'HelloReq.i64 overflow'
		}
		obj['i64']=tmp
	}else{
		throw 'HelloReq.i64 must be integer'
	}
	//ri64
	if(jsobobj['ri64']==null||jsonobj['ri64']==undefined){
		obj['ri64']=null
	}else if(!(jsonobj['ri64'] instanceof Array)){
		throw 'HelloReq.ri64 must be Array<Long>|null|undefined'
	}else{
		for(let element of jsonobj['ri64']){
			if(typeof element=='number'){
				if(!Number.isInteger(element)){
					throw 'element in HelloReq.ri64 must be integer'
				}
				let tmp: Long=Long.ZERO
				try{
					tmp=Long.fromNumber(element,false)
				}catch(e){
					throw 'element in HelloReq.ri64 must be integer'
				}
				if(obj['ri64']==undefined){
					obj['ri64']=new Array<Long>
				}
				obj['ri64'].push(tmp)
			}else if(typeof element=='string'){
				let tmp:Long=Long.ZERO
				try{
					tmp=Long.fromString(element,false)
				}catch(e){
					throw 'element in HelloReq.ri64 must be integer'
				}
				if(tmp.toString()!=element){
					throw 'element in HelloReq.ri64 overflow'
				}
				if(obj['ri64']==undefined){
					obj['ri64']=new Array<Long>
				}
				obj['ri64'].push(tmp)
			}else{
				throw 'element in HelloReq.ri64 must be integer'
			}
		}
	}
	//u64
	if(jsonobj['u64']==null||jsonobj['u64']==undefined){
		obj['u64']=0
	}else if(typeof jsobobj['u64']=='number'){
		if(!Number.isInteger(jsonobj['u64'])){
			throw 'HelloReq.u64 must be integer'
		}
		if(jsobobj['u64']<0){
			throw 'HelloReq.u64 overflow'
		}
		let tmp: Long=Long.ZERO
		try{
			tmp=Long.fromNumber(jsonobj['u64'],true)
		}catch(e){
			throw 'HelloReq.u64 must be integer'
		}
		obj['u64']=tmp
	}else if(typeof jsonobj['u64']=='string'){
		let tmp:Long=Long.ZERO
		try{
			tmp=Long.fromString(jsonobj['u64'],true)
		}catch(e){
			throw 'HelloReq.u64 must be integer'
		}
		if(tmp.toString()!=jsonobj['u64']){
			throw 'HelloReq.u64 overflow'
		}
		obj['u64']=tmp
	}else{
		throw 'format wrong!HelloReq.u64 must be integer'
	}
	//ru64
	if(jsobobj['ru64']==null||jsobobj['ru64']==undefined){
		obj['ru64']=null
	}else if(!(jsonobj['ru64'] instanceof Array)){
		throw 'HelloReq.ru64 must be Array<Long>|null|undefined'
	}else{
		for(let element of jsonobj['ru64']){
			if(typeof element=='number'){
				if(!Number.isInteger(element)){
					throw 'element in HelloReq.ru64 must be integer'
				}
				if(element<0){
					throw 'element in HelloReq.ru64 overflow'
				}
				let tmp: Long=Long.ZERO
				try{
					tmp=Long.fromNumber(element,true)
				}catch(e){
					throw 'element in HelloReq.ru64 must be integer'
				}
				if(obj['ru64']==undefined){
					obj['ru64']=new Array<Long>
				}
				obj['ru64'].push(tmp)
			}else if(typeof element=='string'){
				let tmp:Long=Long.ZERO
				try{
					tmp=Long.fromString(element,true)
				}catch(e){
					throw 'element in HelloReq.ru64 must be integer'
				}
				if(tmp.toString()!=element){
					throw 'element in HelloReq.ru64 overflow'
				}
				if(obj['ru64']==undefined){
					obj['ru64']=new Array<Long>
				}
				obj['ru64'].push(tmp)
			}else{
				throw 'format wrong!element in HelloReq.ru64 must be integer'
			}
		}
	}
	//b
	if(jsonobj['b']==null||jsonobj['b']==undefined){
		obj['b']=false
	}else if(typeof jsonobj['b']!='boolean'){
		throw 'HelloReq.b must be boolean'
	}else{
		obj['b']=jsonobj['b']
	}
	//rb
	if(jsonobj['rb']==null||jsonobj['rb']==undefined){
		obj['rb']=null
	}else if(!(jsonobj['rb'] instanceof Array)){
		throw 'HelloReq.rb must be Array<boolean>|null|undefined'
	}else{
		for(let element of jsonobj['rb']){
			if(typeof element!='boolean'){
				throw 'element in HelloReq.rb must be boolean'
			}
			if(obj['rb']==undefined){
				obj['rb']=new Array<boolean>
			}
			obj['rb'].push(element)
		}
	}
	//e
	if(jsonobj['e']==null||jsonobj['e']==undefined){
		obj['e']=0
	}else if(typeof jsonobj['e']!='number'||(jsonobj['e']!=0&&jsonobj['e']!=3)){
		throw 'HelloReq.e must be enum in TE'
	}else{
		obj['e']=jsonobj['e']
	}
	//es
	if(jsonobj['es']==null||jsonobj['es']==undefined){
		obj['es']=null
	}else if(!(jsonobj['es'] instanceof Array)){
		throw 'HelloReq.es must be Array<TE>|null|undefined'
	}else{
		for(let element of jsonobj['es']){
			if(typeof element!='number'||(element!=0&&element!=3)){
				throw 'element in HelloReq.es must be enum in TE'
			}
			if(obj['es']==undefined){
				obj['es']=new Array<TE>
			}
			obj['es'].push(element)
		}
	}
	//s
	if(jsonobj['s']==null||jsonobj['s']==undefined){
		obj['s']=''
	}else if(typeof jsonobj['s']!='string'){
		throw 'HelloReq.s must be string'
	}else{
		obj['s']=jsonobj['s']
	}
	//rs
	if(jsonobj['rs']==null||jsonobj['rs']==undefined){
		obj['rs']=null
	}else if(!(jsonobj['rs'] instanceof Array)){
		throw 'HelloReq.rs must be Array<string>|null|undefined'
	}else{
		for(let element of jsonobj['rs']){
			if(typeof element!='string'){
				throw 'element in HelloReq.rs must be string'
			}
			if(obj['rs']==undefined){
				obj['rs']=new Array<string>
			}
			obj['rs'].push(element)
		}
	}
	//bs
	if(jsonobj['bs']==null||jsonobj['bs']==undefined){
		obj['bs']=new Uint8Array(0)
	}else if(typeof jsonobj['bs']!='string'){
		throw 'HelloReq.bs must be base64 string from Uint8Array'
	}else{
		let buf:Uint8Array=new Uint8Array(Base64.length(jsonobj['bs']))
		try{
			Base64.decode(jsonobj['bs'],buf,0)
		}catch(e){
			throw 'HelloReq.bs must be base64 string from Uint8Array'
		}
		obj['bs']=buf
	}
	//rbs
	if(jsonobj['rbs']==null||jsonobj['rbs']==undefined){
		obj['rbs']=null
	}else if(!(jsonobj['rbs'] instanceof Array)){
		throw 'HelloReq.rbs must be Array<Uint8Array>|null|undefined'
	}else{
		for(let element of jsonobj['rbs']){
			if(typeof element!='string'){
				throw 'element in HelloReq.rbs must be base64 string from Uint8Array'
			}
			let buf:Uint8Array=new Uint8Array(Base64.length(element))
			try{
				Base64.decode(element,buf,0)
			}catch(e){
				throw 'element in HelloReq.rbs must be base64 string from Uint8Array'
			}
			if(obj['rbs']==undefined){
				obj['rbs']=new Array<Uint8Array>
			}
			obj['rbs'].push(buf)
		}
	}
	//f
	if(jsonobj['f']==null||jsonobj['f']==undefined){
		obj['f']=0
	}else if(typeof jsonobj['f']!='number'){
		throw 'HelloReq.f must be number'
	}else{
		obj['f']=jsonobj['f']
	}
	//rf
	if(jsonobj['rf']==null||jsonobj['rf']==undefined){
		obj['rf']=null
	}else if(!(jsonobj['rf'] instanceof Array)){
		throw 'HelloReq.rf must be Array<number>|null|undefined'
	}else{
		for(let element of jsonobj['rf']){
			if(typeof element!='number'){
				throw 'element in HelloReq.rf must be number'
			}
			if(obj['rf']==undefined){
				obj['rf']=new Array<number>
			}
			obj['rf'].push(element)
		}
	}
	//d
	if(jsonobj['d']==null||jsonobj['d']==undefined){
		obj['d']=0
	}else if(typeof jsonobj['d']!='number'){
		throw 'HelloReq.d must be number'
	}else{
		obj['d']=jsonobj['d']
	}
	//rd
	if(jsonobj['rd']==null||jsonobj['rd']==undefined){
		obj['rd']=null
	}else if(!(jsonobj['rd'] instanceof Array)){
		throw 'HelloReq.rd must be Array<number>|null|undefined'
	}else{
		for(let element of jsonobj['rd']){
			if(typeof element!='number'){
				throw 'element in HelloReq.rd must be number'
			}
			if(obj['rd']==undefined){
				obj['rd']=new Array<number>
			}
			obj['rd'].push(element)
		}
	}
	//msg
	if(jsonobj['msg']=null||jsonobj['msg']==undefined){
		obj['msg']=null
	}else if(typeof jsonobj['msg']!='object'){
		throw 'HelloReq.msg must be Data'
	}else{
		obj['msg']=JsonToData(jsonobj['msg'])
	}
	//rmsg
	if(jsonobj['rmsg']==null||jsonobj['rmsg']==undefined){
		obj['rmsg']=null
	}else if(!(jsonobj['rmsg'] instanceof Array)){
		throw 'HelloReq.rmsg must be Array<Data>|null|undefined'
	}else{
		for(let element of jsonobj['rmsg']){
			if(typeof element!='object'){
				throw 'element in HelloReq.rmsg must be Data'
			}
			if(obj['rmsg']==undefined){
				obj['rmsg']=new Array<Data>
			}
			obj['rmsg'].push(JsonToData(element))
		}
	}
	//mi32
	if(jsonobj['mi32']==null||jsonobj['mi32']==undefined){
		obj['mi32']=null
	}else if(typeof jsonobj['mi32']!='object'){
		throw 'HelloReq.mi32 must be Map<Long,number>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['mi32'])){
			let value=jsonobj['mi32'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.mi32 must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.mi32 overflow'
			}
			if(typeof value!='number'||!Number.isInteger(value)){
				throw 'value in HelloReq.mi32 must be integer'
			}else if(value>2147483647&&value<-2147483648){
				throw 'value in HelloReq.mi32 overflow'
			}
			let v: number=value
			if(obj['mi32']==undefined){
				obj['mi32']=new Map<Long,number>
			}
			obj['mi32'].set(k,v)
		}
	}
	//mu32
	if(jsonobj['mu32']==null||jsonobj['mu32']==undefined){
		obj['mu32']=null
	}else if(typeof jsonobj['mu32']!='object'){
		throw 'HelloReq.mu32 must be Map<Long,number>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['mu32'])){
			let value=jsonobj['mu32'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.mu32 must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.mu32 overflow'
			}
			if(typeof value!='number'||!Number.isInteger(value)){
				throw 'value in HelloReq.mu32 must be integer'
			}else if(value>4294967295&&value<0){
				throw 'value in HelloReq.mu32 overflow'
			}
			let v: number=value
			if(obj['mu32']==undefined){
				obj['mu32']=new Map<Long,number>
			}
			obj['mu32'].set(k,v)
		}
	}
	//mi64
	if(jsonobj['mi64']==null||jsonobj['mi64']==undefined){
		obj['mi64']=null
	}else if(typeof jsonobj['mi64']!='object'){
		throw 'HelloReq.mi64 must be Map<Long,Long>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['mi64'])){
			let value=jsonobj['mi64'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.mi64 must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.mi64 overflow'
			}
			if(typeof value=='number'){
				if(!Number.isInteger(value)){
					throw 'value in HelloReq.mi64 must be integer'
				}
			}else if(typeof value!='string'){
				throw 'value in HelloReq46mi64 must be integer'
			}
			let v: Long=Long.Zero
			if(typeof value=='number'){
				try{
					v=Long.fromNumber(value,false)
				}catch(e){
					throw 'value in HelloReq46mi64 must be integer'
				}
			}else{
				try{
					v=Long.fromString(value,false)
				}catch(e){
					throw 'value in HelloReq.mi64 must be integer'
				}
				if(v.toString()!=value){
					throw 'value in HelloReq.mi64 overflow'
				}
			}
			if(obj['mi64']==undefined){
				obj['mi64']=new Map<Long,Long>
			}
			obj['mi64'].set(k,v)
		}
	}
	//mu64
	if(jsonobj['mu64']==null||jsonobj['mu64']==undefined){
		obj['mu64']=null
	}else if(typeof jsonobj['mu64']!='object'){
		throw 'HelloReq.mu64 must be Map<Long,Long>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['mu64'])){
			let value=jsonobj['mu64'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.mu64 must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.mu64 overflow'
			}
			if(typeof value=='number'){
				if(!Number.isInteger(value)){
					throw 'value in HelloReq.mu64 must be integer'
				}
			}else if(typeof value!='string'){
				throw 'value in HelloReq46mu64 must be integer'
			}
			let v: Long=Long.Zero
			if(typeof value=='number'){
				try{
					v=Long.fromNumber(value,true)
				}catch(e){
					throw 'value in HelloReq.mu64 must be integer'
				}
				if(v.toNumber()!=value){
					throw 'value in HelloReq.mu64 overflow'
				}
			}else{
				try{
					v=Long.fromString(value,true)
				}catch(e){
					throw 'value in HelloReq.mu64 must be integer'
				}
				if(v.toString()!=value){
					throw 'value in HelloReq.mu64 overflow'
				}
			}
			if(obj['mu64']==undefined){
				obj['mu64']=new Map<Long,Long>
			}
			obj['mu64'].set(k,v)
		}
	}
	//mb
	if(jsonobj['mb']==null||jsonobj['mb']==undefined){
		obj['mb']=null
	}else if(typeof jsonobj['mb']!='object'){
		throw 'HelloReq.mb must be Map<Long,boolean>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['mb'])){
			let value=jsonobj['mb'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.mb must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.mb overflow'
			}
			if(typeof value!='boolean'){
				throw 'value in HelloReq.mb must be boolean'
			}
			let v: boolean=value
			if(obj['mb']==undefined){
				obj['mb']=new Map<Long,boolean>
			}
			obj['mb'].set(k,v)
		}
	}
	//me
	if(jsonobj['me']==null||jsonobj['me']==undefined){
		obj['me']=null
	}else if(typeof jsonobj['me']!='object'){
		throw 'HelloReq.me must be Map<Long,TE>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['me'])){
			let value=jsonobj['me'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.me must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.me overflow'
			}
			if(typeof value!='number'||(value!=0&&value!=3)){
				throw 'value in HelloReq.me must be enum in TE'
			}
			let v: TE=value
			if(obj['me']==undefined){
				obj['me']=new Map<Long,TE>
			}
			obj['me'].set(k,v)
		}
	}
	//ms
	if(jsonobj['ms']==null||jsonobj['ms']==undefined){
		obj['ms']=null
	}else if(typeof jsonobj['ms']!='object'){
		throw 'HelloReq.ms must be Map<Long,string>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['ms'])){
			let value=jsonobj['ms'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.ms must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.ms overflow'
			}
			if(typeof value!='string'){
				throw 'value in HelloReq.ms must be string'
			}
			let v: string=value
			if(obj['ms']==undefined){
				obj['ms']=new Map<Long,string>
			}
			obj['ms'].set(k,v)
		}
	}
	//mbs
	if(jsonobj['mbs']==null||jsonobj['mbs']==undefined){
		obj['mbs']=null
	}else if(typeof jsonobj['mbs']!='object'){
		throw 'HelloReq.mbs must be Map<Long,Uint8Array>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['mbs'])){
			let value=jsonobj['mbs'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.mbs must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.mbs overflow'
			}
			if(typeof value!='string'){
				throw 'value in HelloReq.mbs must be base64 string from Uint8Array'
			}
			let buf:Uint8Array=new Uint8Array(Base64.length(value))
			try{
				Base64.decode(value,buf,0)
			}catch(e){
				throw 'value in HelloReq.mbs must be base64 string from Uint8Array'
			}
			let v: Uint8Array=buf
			if(obj['mbs']==undefined){
				obj['mbs']=new Map<Long,Uint8Array>
			}
			obj['mbs'].set(k,v)
		}
	}
	//mf
	if(jsonobj['mf']==null||jsonobj['mf']==undefined){
		obj['mf']=null
	}else if(typeof jsonobj['mf']!='object'){
		throw 'HelloReq.mf must be Map<Long,number>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['mf'])){
			let value=jsonobj['mf'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.mf must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.mf overflow'
			}
			if(typeof value!='number'){
				throw 'value in HelloReq.mf must be number'
			}
			let v: number=value
			if(obj['mf']==undefined){
				obj['mf']=new Map<Long,number>
			}
			obj['mf'].set(k,v)
		}
	}
	//md
	if(jsonobj['md']==null||jsonobj['md']==undefined){
		obj['md']=null
	}else if(typeof jsonobj['md']!='object'){
		throw 'HelloReq.md must be Map<Long,number>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['md'])){
			let value=jsonobj['md'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.md must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.md overflow'
			}
			if(typeof value!='number'){
				throw 'value in HelloReq.md must be number'
			}
			let v: number=value
			if(obj['md']==undefined){
				obj['md']=new Map<Long,number>
			}
			obj['md'].set(k,v)
		}
	}
	//mmsg
	if(jsonobj['mmsg']==null||jsonobj['mmsg']==undefined){
		obj['mmsg']=null
	}else if(typeof jsonobj['mmsg']!='object'){
		throw 'HelloReq.mmsg must be Map<Long,Data|null|undefined>|null|undefined'
	}else{
		for(let key of Object.keys(jsonobj['mmsg'])){
			let value=jsonobj['mmsg'][key]
			let k: Long=Long.Zero
			try{
				k=Long.fromString(key,true)
			}catch(e){
				throw 'key in HelloReq.mmsg must be integer'
			}
			if(k.toString()!=key){
				throw 'key in HelloReq.mmsg overflow'
			}
			let v: Data|null|undefined=null
			if(typeof value==null||typeof value==undefined){
				v=null
			}else if(typeof value!='object'){
				throw 'value in HelloReq.mmsg must be Data|null|undefined'
			}else{
				v=JsonToData(value)
			}
			if(obj['mmsg']==undefined){
				obj['mmsg']=new Map<Long,Data|null|undefined>
			}
			obj['mmsg'].set(k,v)
		}
	}
	if(jsonobj['union']==null||jsonobj['union']==undefined){
		obj['union']=null
	}else if(jsonobj['union'].$key=='oi32'){
		if(typeof jsonobj['union'].value!='number'||!Number.isInteger(jsonobj['union'].value)){
			throw 'when HelloReq.union.$key is oi32,HelloReq.union.value must be integer'
		}else if(jsonobj['union'].value>2147483647||jsonobj['union'].value<-2147483648){
			throw 'HelloReq.union.value overflow'
		}
		obj['union']={$key:'oi32',value:jsonobj['union'].value}
	}else if(jsonobj['union'].$key=='ou32'){
		if(typeof jsonobj['union'].value!='number'||!Number.isInteger(jsonobj['union'].value)){
			throw 'when HelloReq.union.$key is ou32,HelloReq.union.value must be integer'
		}else if(jsonobj['union'].value>4294967295||jsonobj['union'].value<0){
			throw 'HelloReq.union.value overflow'
		}
		obj['union']={$key:'ou32',value:jsonobj['union'].value}
	}else if(jsonobj['union'].$key=='oi64'){
		if(typeof jsonobj['union'].value=='number'){
			if(!Number.isInteger(jsonobj['union'].value)){
				throw 'when HelloReq.union.$key is oi64,HelloReq.union.value must be integer'
			}
			let tmp: Long=Long.ZERO
			try{
				tmp=Long.fromNumber(jsonobj['union'].value,false)
			}catch(e){
				throw 'when HelloReq.union.$key is oi64,HelloReq.union.value must be integer'
			}
			obj['union']={$key:'oi64',value:tmp}
		}else if(typeof jsonobj['union'].value=='string'){
			let tmp: Long=Long.ZERO
			try{
				tmp=Long.fromString(jsonobj['union'].value,false)
			}catch(e){
				throw 'when HelloReq.union.$key is oi64,HelloReq.union.value must be integer'
			}
			if(tmp.toString()!=jsonobj['union'].value){
				throw 'HelloReq.union.value overflow'
			}
			obj['union']={$key:'oi64',value:tmp}
		}else{
			throw 'when HelloReq.union.$key is oi64,HelloReq.union.value must be integer'
		}
	}else if(jsonobj['union'].$key=='ou64'){
		if(typeof jsonobj['union'].value=='number'){
			if(!Number.isInteger(jsonobj['union'].value)){
				throw 'when HelloReq.union.$key is ou64,HelloReq.union.value must be integer'
			}
			if(jsonobj['union'].value<0){
				throw 'HelloReq.union.value overflow'
			}
			let tmp: Long=Long.ZERO
			try{
				tmp=Long.fromNumber(jsonobj['union'].value,true)
			}catch(e){
				throw 'when HelloReq.union.$key is ou64,HelloReq.union.value must be integer'
			}
			obj['union']={$key:'ou64',value:tmp}
		}else if(typeof jsonobj['union'].value=='string'){
			let tmp: Long=Long.ZERO
			try{
				tmp=Long.fromString(jsonobj['union'].value,true)
			}catch(e){
				throw 'when HelloReq.union.$key is ou64,HelloReq.union.value must be integer'
			}
			if(tmp.toString()!=jsonobj['union'].value){
				throw 'HelloReq.union.value overflow'
			}
			obj['union']={$key:'ou64',value:tmp}
		}else{
			throw 'when HelloReq.union.$key is ou64,HelloReq.union.value must be integer'
		}
	}else if(jsonobj['union'].$key=='of'){
		if(typeof jsonobj['union'].value!='number'){
			throw 'when HelloReq.union.$key is of,HelloReq.union.value must be number'
		}
		obj['union']={$key:'of',value:jsonobj['union'].value}
	}else if(jsonobj['union'].$key=='od'){
		if(typeof jsonobj['union'].value!='number'){
			throw 'when HelloReq.union.$key is od,HelloReq.union.value must be number'
		}
		obj['union']={$key:'od',value:jsonobj['union'].value}
	}else if(jsonobj['union'].$key=='os'){
		if(typeof jsonobj['union'].value!='string'){
			throw 'when HelloReq.union.$key is os,HelloReq.union.value must be string'
		}
		obj['union']={$key:'os',value:jsonobj['union'].value}
	}else if(jsonobj['union'].$key=='obs'){
		if(typeof jsonobj['union'].value!='string'){
			throw 'when HelloReq.union.$key is obs,HelloReq.union.value must be base64 string from Uint8Array'
		}
		let buf: Uint8Array=new Uint8Array(Base64.length(jsonobj['union'].value))
		try{
			Base64.decode(jsonobj['union'].value,buf,0)
		}catch(e){
			throw 'when HelloReq.union.$key is obs,HelloReq.union.value must be base64 string from Uint8Array'
		}
		obj['union']={$key:'obs',value:buf}
	}else if(jsonobj['union'].$key=='oe'){
		if(typeof jsonobj['union'].value!='number'||(jsonobj['union'].value!=0&&jsonobj['union'].value!=3)){
			throw 'when HelloReq.union.$key is oe,HelloReq.union.value must be enum in TE'
		}
		obj['union']={$key:'oe',value:jsonobj['union'].value}
	}else if(jsonobj['union'].$key=='ob'){
		if(typeof jsonobj['union'].value!='boolean'){
			throw 'when HelloReq.union.$key is ob,HelloReq.union.value must be boolean'
		}
		obj['union']={$key:'ob',value:jsonobj['union'].value}
	}else if(jsonobj['union'].$key=='omsg'){
		if(typeof jsonobj['union'].value!='object'){
			throw 'when HelloReq.union.$key is omsg,HelloReq.union.value must be Data'
		}
		obj['union']={$key:'omsg',value:JsonToData(jsonobj['union'].value)}
	}
	return obj
}
export interface HelloResp{
	req: HelloReq|null|undefined;
}
function JsonToHelloResp(jsonobj: Object): HelloResp{
	let obj: Object={}
	//req
	if(jsonobj['req']=null||jsonobj['req']==undefined){
		obj['req']=null
	}else if(typeof jsonobj['req']!='object'){
		throw 'HelloResp.req must be HelloReq'
	}else{
		obj['req']=JsonToHelloReq(jsonobj['req'])
	}
	return obj
}
const _WebPathTestHello: string ="/test.test/hello";
export class TestBrowserClientToC {
	constructor(host: string){
		if(host===null||host===undefined||host.length==0){
			throw "TestBrowserClientToC's host missing"
		}
		this.host=host;
	}
	hello(header: { [k: string]: string },req: HelloReq,error: (Error)=>void,success: (HelloResp)=>void){
		header["Content-Type"] = "application/x-www-form-urlencoded"
		let config={
			url:_WebPathTestHello,
			method: "get",
			baseURL: this.host,
		}
		Axios.request(config)
		.then(function(response){
		})
		.catch(function(error){
		})
	}
	private host: string
}
